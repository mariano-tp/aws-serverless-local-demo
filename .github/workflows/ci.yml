name: ci

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '**.md'
      - 'LICENSE'
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 25

    # LocalStack como service container con healthcheck
    services:
      localstack:
        image: localstack/localstack:latest
        ports:
          - 4566:4566
        env:
          SERVICES: s3,sqs,dynamodb
          AWS_DEFAULT_REGION: us-east-1
          DEBUG: "1"
        options: >-
          --health-cmd="bash -c 'curl -fsS http://localhost:4566/health | grep -q \"\\\"ready\\\"\"'"
          --health-interval=5s
          --health-timeout=3s
          --health-retries=120

    env:
      AWS_DEFAULT_REGION: us-east-1
      AWS_ACCESS_KEY_ID: test
      AWS_SECRET_ACCESS_KEY: test
      # Si tu código/fixtures leen esta URL, la dejamos disponible
      LOCALSTACK_URL: http://localhost:4566

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt || true
          pip install -r requirements-dev.txt || true
          pip install awscli-local==0.20
          python --version
          pip --version

      # Opcional: crea recursos esperados por los tests.
      # Si tus tests ya crean todo, podés borrar este bloque sin problema.
      - name: Bootstrap resources (optional)
        run: |
          set -e
          echo "Health:" && curl -fsS http://localhost:4566/health || true

          awslocal s3 mb s3://events-bucket 2>/dev/null || true

          awslocal sqs get-queue-url --queue-name events-queue >/dev/null 2>&1 \
            || awslocal sqs create-queue --queue-name events-queue

          if ! awslocal dynamodb describe-table --table-name events-table >/dev/null 2>&1; then
            awslocal dynamodb create-table \
              --table-name events-table \
              --attribute-definitions \
                  AttributeName=pk,AttributeType=S \
                  AttributeName=sk,AttributeType=S \
              --key-schema \
                  AttributeName=pk,KeyType=HASH \
                  AttributeName=sk,KeyType=RANGE \
              --billing-mode PAY_PER_REQUEST
          fi

      - name: Run tests
        env:
          PYTHONPATH: ${{ github.workspace }}
        run: pytest -q

      - name: Dump LocalStack logs on failure
        if: failure()
        run: |
          docker ps
          docker logs ${{ job.services.localstack.id }} --since=30m || true
